package com.example.demo.entities;
// Generated Oct 24, 2020, 7:32:02 PM by Hibernate Tools 5.1.10.Final

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Majors generated by hbm2java
 */
@Entity
@Table(name = "Majors", schema = "dbo", catalog = "EMS_DB")
public class Majors implements java.io.Serializable {

	private Serializable id;
	private Serializable name;
	private Serializable description;
	private Serializable status;
	private Set<MajorsSemester> majorsSemesters = new HashSet<MajorsSemester>(0);
	private Set<Subject> subjects = new HashSet<Subject>(0);

	public Majors() {
	}

	public Majors(Serializable id) {
		this.id = id;
	}

	public Majors(Serializable id, Serializable name, Serializable description, Serializable status,
			Set<MajorsSemester> majorsSemesters, Set<Subject> subjects) {
		this.id = id;
		this.name = name;
		this.description = description;
		this.status = status;
		this.majorsSemesters = majorsSemesters;
		this.subjects = subjects;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public Serializable getId() {
		return this.id;
	}

	public void setId(Serializable id) {
		this.id = id;
	}

	@Column(name = "name")
	public Serializable getName() {
		return this.name;
	}

	public void setName(Serializable name) {
		this.name = name;
	}

	@Column(name = "Description")
	public Serializable getDescription() {
		return this.description;
	}

	public void setDescription(Serializable description) {
		this.description = description;
	}

	@Column(name = "Status")
	public Serializable getStatus() {
		return this.status;
	}

	public void setStatus(Serializable status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "majors")
	public Set<MajorsSemester> getMajorsSemesters() {
		return this.majorsSemesters;
	}

	public void setMajorsSemesters(Set<MajorsSemester> majorsSemesters) {
		this.majorsSemesters = majorsSemesters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "majors")
	public Set<Subject> getSubjects() {
		return this.subjects;
	}

	public void setSubjects(Set<Subject> subjects) {
		this.subjects = subjects;
	}

}
